import pylab as plb
import numpy as np
import matplotlib.pyplot as plt
from scipy.optimize import curve_fit
from scipy import stats

# x data copied from other program
x = np.array([-0.03      , -0.02939394, -0.02878788, -0.02818182, -0.02757576,
       -0.0269697 , -0.02636364, -0.02575758, -0.02515152, -0.02454545,
       -0.02393939, -0.02333333, -0.02272727, -0.02212121, -0.02151515,
       -0.02090909, -0.02030303, -0.01969697, -0.01909091, -0.01848485,
       -0.01787879, -0.01727273, -0.01666667, -0.01606061, -0.01545455,
       -0.01484848, -0.01424242, -0.01363636, -0.0130303 , -0.01242424,
       -0.01181818, -0.01121212, -0.01060606, -0.01      , -0.00939394,
       -0.00878788, -0.00818182, -0.00757576, -0.0069697 , -0.00636364,
       -0.00575758, -0.00515152, -0.00454545, -0.00393939, -0.00333333,
       -0.00272727, -0.00212121, -0.00151515, -0.00090909, -0.00030303,
        0.00030303,  0.00090909,  0.00151515,  0.00212121,  0.00272727,
        0.00333333,  0.00393939,  0.00454545,  0.00515152,  0.00575758,
        0.00636364,  0.0069697 ,  0.00757576,  0.00818182,  0.00878788,
        0.00939394,  0.01      ,  0.01060606,  0.01121212,  0.01181818,
        0.01242424,  0.0130303 ,  0.01363636,  0.01424242,  0.01484848,
        0.01545455,  0.01606061,  0.01666667,  0.01727273,  0.01787879,
        0.01848485,  0.01909091,  0.01969697,  0.02030303,  0.02090909,
        0.02151515,  0.02212121,  0.02272727,  0.02333333,  0.02393939,
        0.02454545,  0.02515152,  0.02575758,  0.02636364,  0.0269697 ,
        0.02757576,  0.02818182,  0.02878788,  0.02939394,  0.03])

# y data copied from other program
y = np.array([ 2.,  1.,  2.,  1.,  0.,  2.,  1.,  3.,  2.,  3.,  0.,  1.,  3.,
        2.,  4.,  0.,  1.,  4.,  4.,  6.,  2.,  3.,  5.,  3.,  3.,  4.,
        4.,  2.,  9.,  5.,  8.,  3.,  4., 12., 11., 15.,  6., 21., 14.,
       20., 17., 13., 25., 36., 31., 47., 55., 59., 60., 57., 56., 54.,
       50., 36., 40., 30., 37., 29., 20., 29., 20., 24., 26., 22.,  8.,
       16.,  9., 17., 10.,  7., 12.,  9.,  6., 10.,  6.,  6.,  7.,  4.,
        4.,  0.,  3.,  2.,  2.,  0.,  3.,  1.,  1.,  3.,  1.,  0.,  1.,
        0.,  1.,  2.,  1.,  0.,  0.,  0.,  0.,  1.])

n = len(x)                          #the number of data
mean = sum(x*y)/n                   #note this correction
sigma = sum(y*(x-mean)**2)/n        #note this correction

def gaus(x,a,x0,sigma):
    return a*np.exp(-(x-x0)**2/(2*sigma**2))

popt,pcov = curve_fit(gaus,x,y,p0=[1,mean,sigma])

plt.plot(x,y,'b+:',label='data')
plt.plot(x,gaus(x,*popt),'ro:',label='fit')
plt.show()
